#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –≥–µ–æ—Ç—Ä–µ–∫–æ–≤
"""

import subprocess
import sys
import os
import webbrowser
import time
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    try:
        import pandas
        import numpy
        import matplotlib
        import seaborn
        import plotly
        import folium
        import sklearn
        import dash
        print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except ImportError as e:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥–æ–π: pip install -r requirements.txt")
        return False

def run_demo():
    """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –≥–µ–æ—Ç—Ä–µ–∫–æ–≤...")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ
        from main_demo import main
        main()
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        return False

def run_dashboard():
    """–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""
    print("\nüåê –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏...")
    print("=" * 50)
    print("–ü–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8050")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    
    try:
        from dashboard import GeoTrackDashboard
        dashboard = GeoTrackDashboard()
        dashboard.run(debug=False, port=8050)
    except KeyboardInterrupt:
        print("\nüëã –ü–∞–Ω–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–∞–Ω–µ–ª–∏: {e}")

def open_jupyter():
    """–ó–∞–ø—É—Å–∫ Jupyter notebook"""
    print("\nüìì –ó–∞–ø—É—Å–∫ Jupyter notebook...")
    print("=" * 50)
    
    notebook_path = Path("analysis_demo.ipynb")
    if notebook_path.exists():
        try:
            subprocess.run([sys.executable, "-m", "jupyter", "notebook", str(notebook_path)])
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Jupyter: {e}")
    else:
        print("‚ùå –§–∞–π–ª analysis_demo.ipynb –Ω–µ –Ω–∞–π–¥–µ–Ω")

def show_results():
    """–ü–æ–∫–∞–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    print("=" * 50)
    
    output_dir = Path("output")
    if output_dir.exists():
        files = list(output_dir.glob("*"))
        if files:
            for file in sorted(files):
                size = file.stat().st_size
                print(f"   üìÑ {file.name} ({size:,} –±–∞–π—Ç)")
        else:
            print("   üìÅ –ü–∞–ø–∫–∞ output –ø—É—Å—Ç–∞")
    else:
        print("   üìÅ –ü–∞–ø–∫–∞ output –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    main_files = [
        "heatmap_demand.html",
        "heatmap_speed.html", 
        "routes.html",
        "anomalies.html",
        "dashboard.html",
        "track_metrics.png",
        "anomaly_report.txt",
        "demand_model.pkl"
    ]
    
    print("\nüìä –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    for file in main_files:
        file_path = output_dir / file
        if file_path.exists():
            print(f"   ‚úÖ {file}")
        else:
            print(f"   ‚ùå {file}")

def main_menu():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    while True:
        print("\n" + "=" * 60)
        print("üöó –ê–ù–ê–õ–ò–ó –ì–ï–û–¢–†–ï–ö–û–í –ü–û–ï–ó–î–û–ö - –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ")
        print("=" * 60)
        print("1. üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é")
        print("3. üåê –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å")
        print("4. üìì –û—Ç–∫—Ä—ã—Ç—å Jupyter notebook")
        print("5. üìÅ –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
        print("6. ‚ùå –í—ã—Ö–æ–¥")
        print("=" * 60)
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-6): ").strip()
        
        if choice == "1":
            check_dependencies()
        elif choice == "2":
            if check_dependencies():
                run_demo()
        elif choice == "3":
            if check_dependencies():
                run_dashboard()
        elif choice == "4":
            if check_dependencies():
                open_jupyter()
        elif choice == "5":
            show_results()
        elif choice == "6":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    print("üöó –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏–∑–∞ –≥–µ–æ—Ç—Ä–µ–∫–æ–≤ inDrive!")
    print("–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±–µ–∑–ª–∏—á–µ–Ω–Ω—ã–µ –≥–µ–æ—Ç—Ä–µ–∫–∏")
    print("–∏ —Å–æ–∑–¥–∞—Ç—å —Ü–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ —Ç–∞–∫—Å–∏/–∫–∞—Ä—à–µ—Ä–∏–Ω–≥–∞.")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        if sys.argv[1] == "demo":
            if check_dependencies():
                run_demo()
        elif sys.argv[1] == "dashboard":
            if check_dependencies():
                run_dashboard()
        elif sys.argv[1] == "jupyter":
            if check_dependencies():
                open_jupyter()
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: demo, dashboard, jupyter")
    else:
        main_menu()
