"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ –≥–µ–æ—Ç—Ä–µ–∫–æ–≤
"""

import pandas as pd
import numpy as np
from data_processor import GeoTrackProcessor
from visualization import GeoTrackVisualizer
from anomaly_detector import AnomalyDetector
from demand_predictor import DemandPredictor
import os

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("="*60)
    print("üöó –ê–ù–ê–õ–ò–ó –ì–ï–û–¢–†–ï–ö–û–í –ü–û–ï–ó–î–û–ö - –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø inDrive")
    print("="*60)
    
    # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    print("\n1Ô∏è‚É£ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–•")
    print("-" * 40)
    
    processor = GeoTrackProcessor()
    processor.create_sample_data()
    processor.anonymize_data()
    
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(processor.processed_data)} —Ç–æ—á–µ–∫ –≥–µ–æ–¥–∞–Ω–Ω—ã—Ö")
    print(f"‚úÖ –ê–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    # 2. –ê–Ω–∞–ª–∏–∑ –º–µ—Ç—Ä–∏–∫
    print("\n2Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ú–ï–¢–†–ò–ö –¢–†–ï–ö–û–í")
    print("-" * 40)
    
    metrics = processor.calculate_track_metrics()
    print(f"üìä –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(metrics)} —Ç—Ä–µ–∫–æ–≤")
    print(f"üìä –°—Ä–µ–¥–Ω–µ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {metrics['total_distance_km'].mean():.2f} –∫–º")
    print(f"üìä –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å: {metrics['avg_speed_kmh'].mean():.1f} –∫–º/—á")
    print(f"üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: {metrics['max_speed_kmh'].max():.1f} –∫–º/—á")
    
    # 3. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π
    print("\n3Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–ô")
    print("-" * 40)
    
    visualizer = GeoTrackVisualizer(processor)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    os.makedirs('output', exist_ok=True)
    
    print("üó∫Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ø–ª–æ–≤–æ–π –∫–∞—Ä—Ç—ã —Å–ø—Ä–æ—Å–∞...")
    heatmap = visualizer.create_heatmap('output/heatmap_demand.html')
    
    print("üó∫Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ø–ª–æ–≤–æ–π –∫–∞—Ä—Ç—ã —Å–∫–æ—Ä–æ—Å—Ç–∏...")
    speed_heatmap = visualizer.create_speed_heatmap('output/heatmap_speed.html')
    
    print("üó∫Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤...")
    route_map = visualizer.create_route_analysis('output/routes.html')
    
    print("üìä –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –º–µ—Ç—Ä–∏–∫...")
    visualizer.plot_track_metrics('output/track_metrics.png')
    
    print("üìä –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤...")
    visualizer.create_dashboard_plots('output/dashboard.html')
    
    # 4. –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∞–Ω–æ–º–∞–ª–∏–π
    print("\n4Ô∏è‚É£ –û–ë–ù–ê–†–£–ñ–ï–ù–ò–ï –ê–ù–û–ú–ê–õ–ò–ô –ò –£–ó–ö–ò–• –ú–ï–°–¢")
    print("-" * 40)
    
    detector = AnomalyDetector(processor)
    anomaly_results = detector.get_comprehensive_anomalies()
    
    print(f"üö® –ê–Ω–æ–º–∞–ª–∏–π –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏: {anomaly_results['summary']['total_speed_anomalies']}")
    print(f"üö® –ê–Ω–æ–º–∞–ª–∏–π –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é: {anomaly_results['summary']['total_distance_anomalies']}")
    print(f"üö® –ü–∞—Ç—Ç–µ—Ä–Ω-–∞–Ω–æ–º–∞–ª–∏–π: {anomaly_results['summary']['total_pattern_anomalies']}")
    print(f"üö¶ –£–∑–∫–∏—Ö –º–µ—Å—Ç: {anomaly_results['summary']['total_bottlenecks']}")
    print(f"üõ£Ô∏è –ö–ª–∞—Å—Ç–µ—Ä–æ–≤ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {anomaly_results['summary']['n_route_clusters']}")
    print(f"üõ£Ô∏è –í—ã–±—Ä–æ—Å–æ–≤ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {anomaly_results['summary']['n_route_outliers']}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É –∞–Ω–æ–º–∞–ª–∏–π
    print("üó∫Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –∞–Ω–æ–º–∞–ª–∏–π...")
    anomaly_map = visualizer.create_anomaly_map('output/anomalies.html')
    
    # 5. ML-–º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å–ø—Ä–æ—Å–∞
    print("\n5Ô∏è‚É£ –ú–ê–®–ò–ù–ù–û–ï –û–ë–£–ß–ï–ù–ò–ï - –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ï –°–ü–†–û–°–ê")
    print("-" * 40)
    
    predictor = DemandPredictor(processor)
    
    print("ü§ñ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è...")
    training_data = predictor.prepare_training_data()
    print(f"üìä –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ {len(training_data)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ–±—É—á–µ–Ω–∏—è")
    
    print("ü§ñ –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π...")
    ml_results = predictor.train_models()
    best_model = ml_results['best_model']
    print(f"üèÜ –õ—É—á—à–∞—è –º–æ–¥–µ–ª—å: {best_model}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    print("\nüîÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π:")
    test_predictions = [
        (51.095, 71.427, 8, 1),   # –£—Ç—Ä–æ–º –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
        (51.095, 71.427, 14, 1),  # –î–Ω–µ–º –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
        (51.095, 71.427, 20, 5),  # –í–µ—á–µ—Ä–æ–º –≤ –ø—è—Ç–Ω–∏—Ü—É
        (51.095, 71.427, 12, 6),  # –î–Ω–µ–º –≤ —Å—É–±–±–æ—Ç—É
    ]
    
    for lat, lng, hour, day in test_predictions:
        pred = predictor.predict_demand(lat, lng, hour, day)
        day_name = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'][day]
        print(f"   üìç {lat:.3f}, {lng:.3f} | {hour:02d}:00 {day_name} | "
              f"–°–ø—Ä–æ—Å: {pred['predicted_demand']:.1f} | –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {pred['confidence']:.2f}")
    
    # 6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    print("\n6Ô∏è‚É£ –ì–ï–ù–ï–†–ê–¶–ò–Ø –û–¢–ß–ï–¢–ê")
    print("-" * 40)
    
    report = detector.generate_anomaly_report()
    print(report)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    with open('output/anomaly_report.txt', 'w', encoding='utf-8') as f:
        f.write(report)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    metrics.to_csv('output/track_metrics.csv', index=False)
    if len(anomaly_results['combined_anomalies']) > 0:
        anomaly_results['combined_anomalies'].to_csv('output/anomalies.csv', index=False)
    if len(anomaly_results['bottlenecks']) > 0:
        anomaly_results['bottlenecks'].to_csv('output/bottlenecks.csv', index=False)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–µ–ª—å
    predictor.save_model('output/demand_model.pkl')
    
    # 7. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é
    print("\n7Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ü–†–ò–ú–ï–ù–ï–ù–ò–Æ –í inDrive")
    print("-" * 40)
    
    recommendations = [
        "üéØ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –í–û–î–ò–¢–ï–õ–ï–ô:",
        "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–ø–ª–æ–≤—ã–µ –∫–∞—Ä—Ç—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–æ–Ω –≤—ã—Å–æ–∫–æ–≥–æ —Å–ø—Ä–æ—Å–∞",
        "   ‚Ä¢ –£–≤–µ–ª–∏—á—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥–∏—Ç–µ–ª–µ–π –≤ —É–∑–∫–∏—Ö –º–µ—Å—Ç–∞—Ö",
        "   ‚Ä¢ –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π —Å–ø—Ä–æ—Å–∞",
        "",
        "üö¶ –£–õ–£–ß–®–ï–ù–ò–ï –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò:",
        "   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Ç—Ä–µ–∫–∏ —Å –∞–Ω–æ–º–∞–ª—å–Ω–æ –≤—ã—Å–æ–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é",
        "   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –Ω–µ–æ–±—ã—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º",
        "   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–ª–µ—Ä—Ç—ã –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
        "",
        "üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê –ò –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ï:",
        "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤",
        "   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∫–ª–∞—Å—Ç–µ—Ä—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–æ–Ω –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è",
        "   ‚Ä¢ –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ ML-–º–æ–¥–µ–ª–∏ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø—Ä–æ—Å–∞",
        "",
        "üîß –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø:",
        "   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –¥–∞—à–±–æ—Ä–¥ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞",
        "   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö",
        "   ‚Ä¢ –†–µ–∞–ª–∏–∑—É–π—Ç–µ API –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    ]
    
    for rec in recommendations:
        print(rec)
    
    # 8. –ò—Ç–æ–≥–∏
    print("\n8Ô∏è‚É£ –ò–¢–û–ì–ò –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò")
    print("-" * 40)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã:")
    print("   üìÅ output/heatmap_demand.html - –¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ —Å–ø—Ä–æ—Å–∞")
    print("   üìÅ output/heatmap_speed.html - –¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏")
    print("   üìÅ output/routes.html - –ö–∞—Ä—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤")
    print("   üìÅ output/anomalies.html - –ö–∞—Ä—Ç–∞ –∞–Ω–æ–º–∞–ª–∏–π")
    print("   üìÅ output/dashboard.html - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å")
    print("   üìÅ output/track_metrics.png - –ì—Ä–∞—Ñ–∏–∫–∏ –º–µ—Ç—Ä–∏–∫")
    print("   üìÅ output/anomaly_report.txt - –û—Ç—á–µ—Ç –ø–æ –∞–Ω–æ–º–∞–ª–∏—è–º")
    print("   üìÅ output/demand_model.pkl - ML-–º–æ–¥–µ–ª—å")
    print("   üìÅ output/*.csv - –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
    
    print("\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("   python dashboard.py")
    print("   –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8050 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    
    print("\n" + "="*60)
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
    print("="*60)

if __name__ == "__main__":
    main()
